-- phpMyAdmin SQL Dump
-- version 4.5.2
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: 2016-09-18 08:52:42
-- 服务器版本： 10.1.13-MariaDB
-- PHP Version: 7.0.8

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `BlogSystem`
--

-- --------------------------------------------------------

--
-- 表的结构 `articles`
--

CREATE TABLE `articles` (
  `AID` int(10) UNSIGNED NOT NULL COMMENT '文章ID',
  `CID` int(10) UNSIGNED DEFAULT NULL COMMENT '所属内别',
  `Title` varchar(64) NOT NULL COMMENT '文章标题',
  `Content` text NOT NULL COMMENT '文章内容',
  `CreateTime` varchar(64) DEFAULT NULL COMMENT '发表时间',
  `Public` tinyint(1) DEFAULT '1' COMMENT '是否公开(默认1:公开)'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `articles`
--

INSERT INTO `articles` (`AID`, `CID`, `Title`, `Content`, `CreateTime`, `Public`) VALUES
(64, 1, 'Linux nohup命令后台运行程序', '<ol style="box-sizing: border-box; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p>将一个程序后台运行使用的是nohup命令，比如，把turnserver运行于后台，则命令如下</p><pre style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; background-color: rgb(245, 245, 245);">nohup&nbsp;turnserver&nbsp;&amp;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px;">其中，nohup命令的用途是在终端关闭后turnserver不再关闭，而 &amp; 符号的作用是将该程序后台运行。</p></li><li><p>使用ps命令可以查看所有正在运行的进程及其id，命令示例如下：</p><pre style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; background-color: rgb(245, 245, 245);">ps&nbsp;-A</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px;">也可以使用如下方式只呈现turnserver的进程信息</p><pre style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; background-color: rgb(245, 245, 245);">ps&nbsp;-A&nbsp;|&nbsp;grep&nbsp;turnserver</pre></li><li><p>如果想关闭，则使用kill命令进行关闭，如果通过上述命令获得的进程号为29116，则对应的关闭命令如下：</p><pre style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; background-color: rgb(245, 245, 245);">kill&nbsp;29116</pre></li></ol><p><br/></p>', '2016-09-14  14:05:34', 1),
(65, 2, '颜色渐变之JavaScript实现', '<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">虽然css3新增的动画效果非常好用，但是仍然有很多场合是使用JavaScript控制动画效果的，而颜色渐变的动画效果的实现很意思。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">原理：</p><ol style="box-sizing: border-box; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p>将传入的颜色值提取出rgb通道</p></li><li><p>分别对3个通道执行动画操作</p></li><li><p>将3个通道的合成为一个颜色值应用在指定的对象上</p></li></ol><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">效果演示：<a href="http://plter.github.io/learnjs/ChangeColor/" target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); text-decoration: none; background-color: transparent;">http://plter.github.io/learnjs/ChangeColor/</a></p><pre style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; background-color: rgb(245, 245, 245);">/**\n&nbsp;*&nbsp;Created&nbsp;by&nbsp;plter&nbsp;on&nbsp;8/20/16.\n&nbsp;*/(function&nbsp;()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;start&nbsp;=&nbsp;0xff0000;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;end&nbsp;=&nbsp;0x00ff00;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;frames&nbsp;=&nbsp;60;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;frameIndex&nbsp;=&nbsp;0;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;color&nbsp;=&nbsp;start;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;speedRed&nbsp;=&nbsp;(getRedChannel(end)&nbsp;-&nbsp;getRedChannel(start))&nbsp;/&nbsp;frames;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;speedGreen&nbsp;=&nbsp;(getGreenChannel(end)&nbsp;-&nbsp;getGreenChannel(start))&nbsp;/&nbsp;frames;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;speedBlue&nbsp;=&nbsp;(getBlueChannel(end)&nbsp;-&nbsp;getBlueChannel(start))&nbsp;/&nbsp;frames;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;greenChannel&nbsp;=&nbsp;getGreenChannel(start);&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;redChannel&nbsp;=&nbsp;getRedChannel(start);&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;blueChannel&nbsp;=&nbsp;getBlueChannel(start);&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;getColorString(red,&nbsp;green,&nbsp;blue)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&quot;rgb(&quot;&nbsp;+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Math.round(redChannel)&nbsp;+&nbsp;&quot;,&quot;&nbsp;+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Math.round(greenChannel)&nbsp;+&nbsp;&quot;,&quot;&nbsp;+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Math.round(blueChannel)&nbsp;+&nbsp;&quot;)&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;div&nbsp;=&nbsp;document.createElement(&quot;div&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;div.style.width&nbsp;=&nbsp;&quot;200px&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;div.style.height&nbsp;=&nbsp;&quot;200px&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;div.style.backgroundColor&nbsp;=&nbsp;getColorString(getRedChannel(start),&nbsp;getGreenChannel(start),&nbsp;getBlueChannel(start));&nbsp;&nbsp;&nbsp;&nbsp;document.body.appendChild(div);&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;getRedChannel(color)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(color&nbsp;&amp;&nbsp;0xff0000)&nbsp;&gt;&gt;&nbsp;16;\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;getGreenChannel(color)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(color&nbsp;&amp;&nbsp;0x00ff00)&nbsp;&gt;&gt;&nbsp;8;\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;getBlueChannel(color)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;color&nbsp;&amp;&nbsp;0x0000ff;\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;runAnimation()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;frameIndex++;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(frameIndex&nbsp;&lt;=&nbsp;frames)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;requestAnimationFrame(runAnimation);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;=&nbsp;end;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;blueChannel&nbsp;=&nbsp;getBlueChannel(end);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;redChannel&nbsp;=&nbsp;getRedChannel(end);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;greenChannel&nbsp;=&nbsp;getGreenChannel(end);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;colorString&nbsp;=&nbsp;getColorString(redChannel,&nbsp;greenChannel,&nbsp;blueChannel);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;div.style.backgroundColor&nbsp;=&nbsp;colorString;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(frameIndex,&nbsp;colorString);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;blueChannel&nbsp;+=&nbsp;speedBlue;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;redChannel&nbsp;+=&nbsp;speedRed;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;greenChannel&nbsp;+=&nbsp;speedGreen;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;div.onclick&nbsp;=&nbsp;runAnimation;\n\n})();</pre><p><br/></p>', '2016-09-18  14:39:34', 1),
(66, 2, '使用HTML5技术将视频变成黑白的', '<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">原理是不直接将video呈现出来，而是使用canvas不断的绘制video的画面，绘制中将video画面的像素调成黑白的。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">效果如：<a href="http://plter.github.io/learnjs/PlayVideo/CanvasVideo.html" style="box-sizing: border-box; color: rgb(51, 122, 183); text-decoration: none; background-color: transparent;">http://plter.github.io/learnjs/PlayVideo/CanvasVideo.html</a></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">js源码如下：</p><pre style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; background-color: rgb(245, 245, 245);">/**\n&nbsp;*&nbsp;Created&nbsp;by&nbsp;plter&nbsp;on&nbsp;6/19/16.\n&nbsp;*/(function&nbsp;()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;App()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._videoMetaLoaded&nbsp;=&nbsp;false;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@type&nbsp;{HTMLCanvasElement}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@private\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._canvas&nbsp;=&nbsp;document.getElementById(&quot;canvas&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._context2d&nbsp;=&nbsp;this._canvas.getContext(&quot;2d&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._memoryCanvas&nbsp;=&nbsp;document.createElement(&quot;canvas&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._memoryCanvas.width&nbsp;=&nbsp;1000;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._memoryCanvas.height&nbsp;=&nbsp;800;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._memoryContext2d&nbsp;=&nbsp;this._memoryCanvas.getContext(&quot;2d&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.createVideo();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.render();\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;App.prototype.render&nbsp;=&nbsp;function&nbsp;()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(this._videoMetaLoaded)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._memoryContext2d.drawImage(this._video,&nbsp;0,&nbsp;0);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@type&nbsp;{ImageData}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._tmpImageData&nbsp;=&nbsp;this._memoryContext2d.getImageData(0,&nbsp;0,&nbsp;this._video.videoWidth,&nbsp;this._video.videoHeight);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(var&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;this._tmpImageData.data.length;&nbsp;i&nbsp;+=&nbsp;4)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._tmpPixelValue&nbsp;=&nbsp;(this._tmpImageData.data[i]&nbsp;+&nbsp;this._tmpImageData.data[i&nbsp;+&nbsp;1]&nbsp;+&nbsp;this._tmpImageData.data[i&nbsp;+&nbsp;2])&nbsp;/&nbsp;3;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._videoFrame.data[i]&nbsp;=&nbsp;this._tmpPixelValue;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._videoFrame.data[i&nbsp;+&nbsp;1]&nbsp;=&nbsp;this._tmpPixelValue;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._videoFrame.data[i&nbsp;+&nbsp;2]&nbsp;=&nbsp;this._tmpPixelValue;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._videoFrame.data[i&nbsp;+&nbsp;3]&nbsp;=&nbsp;255;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._context2d.putImageData(this._tmpImageData,&nbsp;0,&nbsp;0);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._context2d.putImageData(this._videoFrame,&nbsp;this._video.videoWidth,&nbsp;0);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;requestAnimationFrame(this.render.bind(this));\n&nbsp;&nbsp;&nbsp;&nbsp;};\n\n&nbsp;&nbsp;&nbsp;&nbsp;App.prototype.createVideo&nbsp;=&nbsp;function&nbsp;()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/**\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@type&nbsp;{HTMLVideoElement}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@private\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._video&nbsp;=&nbsp;document.createElement(&quot;video&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._video.autoplay&nbsp;=&nbsp;true;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._video.src&nbsp;=&nbsp;&quot;video.mp4&quot;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._video.addEventListener(&quot;loadedmetadata&quot;,&nbsp;function&nbsp;(e)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//create&nbsp;video&nbsp;image\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._videoFrame&nbsp;=&nbsp;this._context2d.createImageData(this._video.videoWidth,&nbsp;this._video.videoHeight);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this._videoMetaLoaded&nbsp;=&nbsp;true;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}.bind(this));\n&nbsp;&nbsp;&nbsp;&nbsp;};&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;App();\n})();</pre><p><br/></p>', '2016-09-18  14:39:45', 1),
(68, 2, 'css3写的3D卡片控件', '<pre style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; background-color: rgb(245, 245, 245);">&lt;!DOCTYPE&nbsp;html&gt;&lt;html&nbsp;lang=&quot;en&quot;&gt;&lt;head&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;charset=&quot;UTF-8&quot;&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;Title&lt;/title&gt;\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;link&nbsp;rel=&quot;stylesheet&quot;&nbsp;href=&quot;style.css&quot;&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&nbsp;src=&quot;http://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div&nbsp;id=&quot;scene&quot;&gt;&lt;/div&gt;&lt;script&nbsp;src=&quot;app.js&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">style.css代码如下</p><pre style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; background-color: rgb(245, 245, 245);">@keyframes&nbsp;anim_a_over&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;perspective(1000px)&nbsp;rotateY(0deg);\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;perspective(1000px)&nbsp;rotateY(180deg);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\n@keyframes&nbsp;anim_a_back&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;perspective(1000px)&nbsp;rotateY(180deg);\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;perspective(1000px)&nbsp;rotateY(0deg);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\n@keyframes&nbsp;anim_b_over&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;perspective(1000px)&nbsp;rotateY(0deg);\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;perspective(1000px)&nbsp;rotateY(-180deg);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n\n@keyframes&nbsp;anim_b_back&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;perspective(1000px)&nbsp;rotateY(-180deg);\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform:&nbsp;perspective(1000px)&nbsp;rotateY(0deg);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}body&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;background-color:&nbsp;black;\n}.card_container&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;float:&nbsp;left;&nbsp;&nbsp;&nbsp;&nbsp;width:&nbsp;204px;&nbsp;&nbsp;&nbsp;&nbsp;height:&nbsp;204px;&nbsp;&nbsp;&nbsp;&nbsp;padding:&nbsp;2px&nbsp;2px;\n}.card&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;width:&nbsp;200px;&nbsp;&nbsp;&nbsp;&nbsp;height:&nbsp;200px;\n}.card_page&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;position:&nbsp;absolute;&nbsp;&nbsp;&nbsp;&nbsp;backface-visibility:&nbsp;hidden;&nbsp;&nbsp;&nbsp;&nbsp;animation-fill-mode:&nbsp;forwards;\n}.card_b&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;animation-name:&nbsp;anim_b_over;&nbsp;&nbsp;&nbsp;&nbsp;animation-duration:&nbsp;1s;\n}.card_a&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;animation-duration:&nbsp;1s;&nbsp;&nbsp;&nbsp;&nbsp;animation-name:&nbsp;anim_a_back;\n}.card_a_hovered&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;animation-duration:&nbsp;1s;&nbsp;&nbsp;&nbsp;&nbsp;animation-name:&nbsp;anim_a_over;\n}.card_b_hovered&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;animation-name:&nbsp;anim_b_back;&nbsp;&nbsp;&nbsp;&nbsp;animation-duration:&nbsp;1s;\n}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">app.js代码如下</p><pre style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; background-color: rgb(245, 245, 245);">/**\n&nbsp;*&nbsp;Created&nbsp;by&nbsp;plter&nbsp;on&nbsp;4/20/16.\n&nbsp;*/(function&nbsp;()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;Constants&nbsp;=&nbsp;{IMAGE_BASE_URL:&nbsp;&quot;images/&quot;};&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;Card()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;imgAUrl:&nbsp;null,&nbsp;imgBUrl:&nbsp;null,\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cardInit:&nbsp;function&nbsp;(imgAUrl,&nbsp;imgBUrl)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.imgAUrl&nbsp;=&nbsp;imgAUrl;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.imgBUrl&nbsp;=&nbsp;imgBUrl;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getDomHtmlString:&nbsp;function&nbsp;()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&quot;&lt;div&nbsp;class=&#39;card_container&#39;&gt;&quot;&nbsp;+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&lt;div&nbsp;class=&#39;card_a&nbsp;card&nbsp;card_page&#39;&gt;&lt;img&nbsp;src=&#39;&quot;&nbsp;+&nbsp;Constants.IMAGE_BASE_URL&nbsp;+&nbsp;this.imgAUrl&nbsp;+&nbsp;&quot;&#39;&gt;&lt;/div&gt;&quot;&nbsp;+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&lt;div&nbsp;class=&#39;card_b&nbsp;card&nbsp;card_page&#39;&gt;&lt;img&nbsp;src=&#39;&quot;&nbsp;+&nbsp;Constants.IMAGE_BASE_URL&nbsp;+&nbsp;this.imgBUrl&nbsp;+&nbsp;&quot;&#39;&gt;&lt;/div&gt;&quot;&nbsp;+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&lt;/div&gt;&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;App()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cards:&nbsp;null,&nbsp;cardsHtml:&nbsp;null,&nbsp;scene:&nbsp;null,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;imgUrls:&nbsp;[&quot;001.jpg&quot;,&nbsp;&quot;002.jpg&quot;,&nbsp;&quot;003.jpg&quot;,&nbsp;&quot;004.jpg&quot;,&nbsp;&quot;005.jpg&quot;,&nbsp;&quot;006.jpg&quot;,&nbsp;&quot;007.jpg&quot;,&nbsp;&quot;008.jpg&quot;,&nbsp;&quot;009.jpg&quot;,&nbsp;&quot;010.jpg&quot;,&nbsp;&quot;011.jpg&quot;,&nbsp;&quot;012.jpg&quot;,&nbsp;&quot;013.png&quot;,&nbsp;&quot;014.jpg&quot;,&nbsp;&quot;015.jpg&quot;,&nbsp;&quot;016.jpg&quot;,&nbsp;&quot;017.jpg&quot;,&nbsp;&quot;018.jpg&quot;,&nbsp;&quot;019.jpg&quot;,&nbsp;&quot;020.jpg&quot;,&nbsp;&quot;021.jpg&quot;,&nbsp;&quot;022.jpg&quot;],\n\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;appInit:&nbsp;function&nbsp;()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.scene&nbsp;=&nbsp;$(&quot;#scene&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cards&nbsp;=&nbsp;this.createCards();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.cardsHtml&nbsp;=&nbsp;this.getCardsHtml(this.cards);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.scene.html(this.cardsHtml);\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(&quot;.card_container&quot;).hover(function&nbsp;(e)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(this).find(&quot;.card_a&quot;).toggleClass(&quot;card_a_hovered&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(this).find(&quot;.card_b&quot;).toggleClass(&quot;card_b_hovered&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;createCards:&nbsp;function&nbsp;()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;cards&nbsp;=&nbsp;[];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(var&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;this.imgUrls.length;&nbsp;i&nbsp;+=&nbsp;2)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cards.push(Card().cardInit(this.imgUrls[i],&nbsp;this.imgUrls[i&nbsp;+&nbsp;1]));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;cards;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getCardsHtml:&nbsp;function&nbsp;(cards)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;html&nbsp;=&nbsp;&quot;&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cards.forEach(function&nbsp;(c)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html&nbsp;+=&nbsp;c.getDomHtmlString();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;html;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;App().appInit();\n}());</pre><p><br/></p>', '2016-09-18  14:40:00', 0),
(69, 2, 'HTML5 Canvas图片调色基本原理(反色、黑白)', '<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);"><img class="alignnone" src="http://plter.github.io/learn3js/TranslateColor/canvas.png" alt="" width="900" height="300"/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">该示例演示如何将彩色照片变成黑白照片以及如何反色，先记录上，以后有时间再详细讲，效果演示：<a href="http://plter.github.io/learn3js/TranslateColor/" target="_blank" style="box-sizing: border-box; color: rgb(51, 122, 183); text-decoration: none; background-color: transparent;">http://plter.github.io/learn3js/TranslateColor/</a>，源码如下：</p><pre style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; background-color: rgb(245, 245, 245);">/**\n&nbsp;*&nbsp;Created&nbsp;by&nbsp;plter&nbsp;on&nbsp;2/3/16.\n&nbsp;*/namespace&nbsp;plter&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;export&nbsp;class&nbsp;Main&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;context:CanvasRenderingContext2D;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;invisibleCanvasContext;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;constructor()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.context&nbsp;=&nbsp;(document.getElementById(&quot;canvas&quot;)&nbsp;as&nbsp;HTMLCanvasElement).getContext(&quot;2d&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.createInvisibleCanvasContext();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.loadImage();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;createInvisibleCanvasContext()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let&nbsp;tmpCanvas&nbsp;=&nbsp;document.createElement(&quot;canvas&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmpCanvas.width&nbsp;=&nbsp;800;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tmpCanvas.height&nbsp;=&nbsp;600;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.invisibleCanvasContext&nbsp;=&nbsp;tmpCanvas.getContext(&quot;2d&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;loadImage()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let&nbsp;img&nbsp;=&nbsp;new&nbsp;Image();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;img.onload&nbsp;=&nbsp;function&nbsp;()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.context.drawImage(img,&nbsp;0,&nbsp;0);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.context.putImageData(this.translateToBlackAndWhite(this.getImageDataFromImage(img)),&nbsp;300,&nbsp;0);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.context.putImageData(this.translateToRevertColor(this.getImageDataFromImage(img)),&nbsp;600,&nbsp;0);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}.bind(this);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;img.src&nbsp;=&nbsp;&quot;img.jpg&quot;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;translateToBlackAndWhite(imageData:ImageData):ImageData&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let&nbsp;newImageData:ImageData&nbsp;=&nbsp;this.context.createImageData(imageData.width,&nbsp;imageData.height);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let&nbsp;m;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(let&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;imageData.data.length;&nbsp;i&nbsp;+=&nbsp;4)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m&nbsp;=&nbsp;(imageData.data[i]&nbsp;+&nbsp;imageData.data[i&nbsp;+&nbsp;1]&nbsp;+&nbsp;imageData.data[i&nbsp;+&nbsp;2])&nbsp;/&nbsp;3;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newImageData.data[i]&nbsp;=&nbsp;m;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newImageData.data[i&nbsp;+&nbsp;1]&nbsp;=&nbsp;m;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newImageData.data[i&nbsp;+&nbsp;2]&nbsp;=&nbsp;m;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newImageData.data[i&nbsp;+&nbsp;3]&nbsp;=&nbsp;255;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;newImageData;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;translateToRevertColor(imageData:ImageData):ImageData&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let&nbsp;newImageData:ImageData&nbsp;=&nbsp;this.context.createImageData(imageData.width,&nbsp;imageData.height);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;let&nbsp;r,&nbsp;g,&nbsp;b,&nbsp;m;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(let&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;imageData.data.length;&nbsp;i&nbsp;+=&nbsp;4)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newImageData.data[i]&nbsp;=&nbsp;255&nbsp;-&nbsp;imageData.data[i];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newImageData.data[i&nbsp;+&nbsp;1]&nbsp;=&nbsp;255&nbsp;-&nbsp;imageData.data[i&nbsp;+&nbsp;1];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newImageData.data[i&nbsp;+&nbsp;2]&nbsp;=&nbsp;255&nbsp;-&nbsp;imageData.data[i&nbsp;+&nbsp;2];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newImageData.data[i&nbsp;+&nbsp;3]&nbsp;=&nbsp;255;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;newImageData;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;getImageDataFromImage(img:HTMLImageElement):ImageData&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.invisibleCanvasContext.drawImage(img,&nbsp;0,&nbsp;0);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.invisibleCanvasContext.getImageData(0,&nbsp;0,&nbsp;img.width,&nbsp;img.height);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}new&nbsp;plter.Main();</pre><p><br/></p>', '2016-09-18  14:40:14', 0),
(70, 3, '小学生作文《秘密》', '<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">妈妈说我是捡来的<br/>我笑了笑<br/>我不想说出一个秘密<br/>------怕妈妈伤心</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">我知道<br/>爸爸姓万<br/>哥哥姓万<br/>我也姓万<br/>只有妈妈姓姜</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">谁是捡来的<br/>不说你也明白<br/>嘘！我会把这个秘密永远藏在心中</p><p><br/></p>', '2016-09-18  14:40:23', 1),
(71, 1, '程序员吃饭', '<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">几个程序员去吃饭，有人点了一道菜，麻辣牛蛙。然后其中有个人说自己不吃牛蛙，于是负责点菜的直接在麻辣牛蛙前划了两道斜线，就像这样：</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">//麻辣牛蛙</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">现场没有任何人觉得有哪里不对，直到服务员端上来11盘麻辣牛蛙</p><p><br/></p>', '2016-09-14  14:17:35', 1),
(72, 3, '土豪的理想', '<p><span style="color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; background-color: rgb(255, 255, 255);">昨天和几个有钱人一桌吃饭，我问他们：你们这么有钱，你们的理想和生活目标是什么？他们说：等再奋斗几年，就去农村，买个农家院，养点鸡鸭鹅狗猪，种点花</span><br/><span style="color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; background-color: rgb(255, 255, 255);">草，春天挖野菜，夏天钓钓鱼，冬天扫扫雪，没事的时候约几个朋友逗逗地主，喝点小酒，吹吹牛逼，农村生活多美好，吃完饭我回家琢磨半天，妈的，土豪的理想</span><br/><span style="color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; background-color: rgb(255, 255, 255);">就是我现在的生活，我还奋斗个屁啊！上炕睡觉！</span></p>', '2016-09-18  14:40:31', 1),
(73, 3, '大师指点写操作系统', '<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">程序员见禅师：我学了 hello world 和水仙花数，想自己开发个操作系统，希望大师指点。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">禅师笑而不语，抓来一只鸡，在鸡腿上缠根线，他一拉线，鸡立即跌倒，鸡挣扎起来继续走，禅师又一拉，鸡又跌倒，如此反复八次之多。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">程序员若有所悟：“大师您是让百折不挠，再接再厉？”</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">禅师一笑：“小伙子，我是让你拉鸡八倒。”</p><p><br/></p>', '2016-09-18  14:40:39', 1),
(74, 3, 'PHP是最好的编程语言', '<ul style="box-sizing: border-box; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p>某女:你能让这个论坛的人都吵起来,我今晚就跟你走.</p></li><li><p>某软件工程师:PHP是最好的语言!</p></li><li><p>某论坛炸锅了,各种吵架...</p></li><li><p>某女:服了你了,我们走吧 你想干啥都行.</p></li><li><p>某软件工程师:今天不行,我一定要说服他们,PHP必须是最好的语言</p></li><li><p>某女：.......</p></li></ul><p><br/></p>', '2016-09-18  14:40:50', 0),
(75, 3, '问程序员问题', '<ul style="box-sizing: border-box; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p>A：嘿 //是什么意思啊？</p></li><li><p>B：嘿.</p></li><li><p>A：呃我问你//是什么意思？</p></li><li><p>B：问吧.</p></li><li><p>A：我刚才不是问了么？</p></li><li><p>B：啊？</p></li><li><p>A：你再看看记录…</p></li><li><p>B：看完了.</p></li><li><p>A：……所以//是啥？</p></li><li><p>B：所以什么？</p></li><li><p>A：你存心耍我呢吧？</p></li><li><p>B：没有啊你想问什么？……不断循环之后，</p></li><li><p>A一气之下和B绝交，自己苦学程序。N 年之后，A终于修成正果，回想起B，又把聊天记录翻出来看，这时，他突然发现B没有耍他……而他自己也不知道当年他问B的究竟是什么问题……</p></li></ul><p><br/></p>', '2016-09-18  14:41:09', 1),
(76, 3, '夫妻取钱', '<p><span style="color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; background-color: rgb(255, 255, 255);">刚才我去ATM取钱，前面有一对夫妻。妻子对丈夫说：“我要输密码了，你起开”，丈夫退到一边去了。我心想，这女人好强势啊，说明女人管账啊！只听到滴滴三声过后，妻子转身对丈夫说：“好了，我输完了，该你输后三位了”！哎呦，我去，真开眼，原来是互相制约互相监督啊～～高！ 后来：丈夫先按了3次退格键，然后输入了6位密码～～我整个人都呆了，高手啊，真是魔高一丈</span></p>', '2016-09-18  14:41:17', 1),
(77, 1, 'Mysql备份和恢复数据库', '<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">备份</p><pre style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; background-color: rgb(245, 245, 245);">mysqldump&nbsp;--databases&nbsp;wordpress&nbsp;&gt;&nbsp;backup.sql</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">恢复</p><pre style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; background-color: rgb(245, 245, 245);">mysql&nbsp;&lt;&nbsp;backup.sql</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">恢复到指定的库</p><pre style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; background-color: rgb(245, 245, 245);">mysql&nbsp;wordpress&nbsp;&lt;&nbsp;backup.sql</pre><p><br/></p>', '2016-09-14  14:29:27', 1),
(78, 1, '理解色相', '<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">如果把颜色用hsl来表示的话，其中的h就是色相，本示例代码用来演示色相的变化</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">演示效果请看：<a href="http://plter.github.io/learnjs/ColorHue/index.html" style="box-sizing: border-box; color: rgb(51, 122, 183); text-decoration: none; background-color: transparent;">http://plter.github.io/learnjs/ColorHue/index.html</a></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px; white-space: normal; background-color: rgb(255, 255, 255);">源码代码如下：</p><pre style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &#39;Courier New&#39;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; border: 1px solid rgb(204, 204, 204); border-radius: 4px; background-color: rgb(245, 245, 245);">/**\n&nbsp;*&nbsp;Created&nbsp;by&nbsp;plter&nbsp;on&nbsp;6/7/16.\n&nbsp;*/class&nbsp;Main&nbsp;{\n\n&nbsp;&nbsp;&nbsp;&nbsp;canvas:HTMLCanvasElement;\n&nbsp;&nbsp;&nbsp;&nbsp;context2d:CanvasRenderingContext2D;\n&nbsp;&nbsp;&nbsp;&nbsp;WIDTH:number&nbsp;=&nbsp;550;\n&nbsp;&nbsp;&nbsp;&nbsp;HEIGHT:number&nbsp;=&nbsp;400;\n&nbsp;&nbsp;&nbsp;&nbsp;colorH:number&nbsp;=&nbsp;0;\n&nbsp;&nbsp;&nbsp;&nbsp;msgContainer:HTMLDivElement;&nbsp;&nbsp;&nbsp;&nbsp;constructor()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.msgContainer&nbsp;=&nbsp;document.createElement(&#39;div&#39;)&nbsp;as&nbsp;HTMLDivElement;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.body.appendChild(this.msgContainer);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.canvas&nbsp;=&nbsp;document.createElement(&#39;canvas&#39;)&nbsp;as&nbsp;HTMLCanvasElement;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.canvas.width&nbsp;=&nbsp;this.WIDTH;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.canvas.height&nbsp;=&nbsp;this.HEIGHT;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.body.appendChild(this.canvas);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.context2d&nbsp;=&nbsp;this.canvas.getContext(&#39;2d&#39;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.render();\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;formatToRadix16(num:number):String&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;num&nbsp;&lt;&nbsp;16&nbsp;?&nbsp;&quot;0&quot;&nbsp;+&nbsp;num.toString(16)&nbsp;:&nbsp;num.toString(16);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;makeColorByH(h):string&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;%=&nbsp;360;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;r:number&nbsp;=&nbsp;0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;g:number&nbsp;=&nbsp;0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;b:number&nbsp;=&nbsp;0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(h&nbsp;&lt;=&nbsp;60)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;=&nbsp;255;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g&nbsp;=&nbsp;255&nbsp;*&nbsp;h&nbsp;/&nbsp;60;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(h&nbsp;&lt;=&nbsp;120)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;=&nbsp;255&nbsp;*&nbsp;(120&nbsp;-&nbsp;h)&nbsp;/&nbsp;60;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g&nbsp;=&nbsp;255;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(h&nbsp;&lt;=&nbsp;180)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g&nbsp;=&nbsp;255;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;=&nbsp;255&nbsp;*&nbsp;(h&nbsp;-&nbsp;120)&nbsp;/&nbsp;60;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(h&nbsp;&lt;=&nbsp;240)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g&nbsp;=&nbsp;255&nbsp;*&nbsp;(240&nbsp;-&nbsp;h)&nbsp;/&nbsp;60;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;=&nbsp;255;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(h&nbsp;&lt;=&nbsp;300)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;=&nbsp;255;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;=&nbsp;255&nbsp;*&nbsp;(h&nbsp;-&nbsp;240)&nbsp;/&nbsp;60;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;=&nbsp;255&nbsp;*&nbsp;(360&nbsp;-&nbsp;h)&nbsp;/&nbsp;60;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;=&nbsp;255;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;=&nbsp;Math.round(r);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;g&nbsp;=&nbsp;Math.round(g);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;=&nbsp;Math.round(b);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;color&nbsp;=&nbsp;&quot;#&quot;&nbsp;+&nbsp;this.formatToRadix16(r)&nbsp;+&nbsp;this.formatToRadix16(g)&nbsp;+&nbsp;this.formatToRadix16(b);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.msgContainer.innerHTML&nbsp;=&nbsp;&quot;颜色:&lt;span&nbsp;style=&quot;width:&nbsp;100px;&nbsp;display:&nbsp;inline-block;&quot;&gt;&quot;&nbsp;+&nbsp;color&nbsp;+&nbsp;&quot;&lt;/span&gt;&quot;&nbsp;+&nbsp;&quot;色相:&quot;&nbsp;+&nbsp;Math.round(h);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;color;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;render()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.context2d.save();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.context2d.fillStyle&nbsp;=&nbsp;this.makeColorByH(this.colorH);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.context2d.fillRect(0,&nbsp;0,&nbsp;this.WIDTH,&nbsp;this.HEIGHT);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.context2d.restore();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.colorH&nbsp;+=&nbsp;0.6;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;requestAnimationFrame(this.render.bind(this));\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}new&nbsp;Main();</pre><p><br/></p>', '2016-09-14  14:34:08', 0);

-- --------------------------------------------------------

--
-- 表的结构 `categories`
--

CREATE TABLE `categories` (
  `CID` int(10) UNSIGNED NOT NULL COMMENT '类别编码',
  `CName` varchar(64) NOT NULL COMMENT '类别名称'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='分类表';

--
-- 转存表中的数据 `categories`
--

INSERT INTO `categories` (`CID`, `CName`) VALUES
(2, 'js'),
(3, '笑话'),
(1, '随笔');

-- --------------------------------------------------------

--
-- 表的结构 `comments`
--

CREATE TABLE `comments` (
  `ID` int(10) UNSIGNED NOT NULL COMMENT '评论',
  `Visitor` varchar(16) NOT NULL,
  `Content` varchar(100) NOT NULL COMMENT '内容',
  `CreateTime` varchar(64) DEFAULT NULL COMMENT '评论时间',
  `Email` varchar(32) NOT NULL,
  `AID` int(10) UNSIGNED NOT NULL COMMENT '文章ID'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- 表的结构 `images`
--

CREATE TABLE `images` (
  `id` int(10) UNSIGNED NOT NULL,
  `AID` int(10) UNSIGNED NOT NULL,
  `url` varchar(64) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- 表的结构 `sessions`
--

CREATE TABLE `sessions` (
  `session_id` varchar(255) COLLATE utf8_bin NOT NULL,
  `expires` int(11) UNSIGNED NOT NULL,
  `data` text COLLATE utf8_bin
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

--
-- 转存表中的数据 `sessions`
--

INSERT INTO `sessions` (`session_id`, `expires`, `data`) VALUES
('Ud7CkLX-Rk_WdDbmzDy5BpjcV4ybl1XO', 1474267562, '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"}}');

-- --------------------------------------------------------

--
-- 表的结构 `user`
--

CREATE TABLE `user` (
  `UID` int(10) UNSIGNED NOT NULL COMMENT '用户编码',
  `name` varchar(32) NOT NULL COMMENT '用户名',
  `password` varchar(32) NOT NULL COMMENT '密码',
  `jointime` varchar(64) DEFAULT NULL COMMENT '注册时间',
  `imagepath` varchar(255) DEFAULT NULL COMMENT '头像图片路径'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='用户表';

--
-- 转存表中的数据 `user`
--

INSERT INTO `user` (`UID`, `name`, `password`, `jointime`, `imagepath`) VALUES
(3, 'admin', 'admin', '2016-09-11 16:09:43', NULL),
(4, 'hyy', '123', '2016-09-12 09:42:28', NULL);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `articles`
--
ALTER TABLE `articles`
  ADD PRIMARY KEY (`AID`);

--
-- Indexes for table `categories`
--
ALTER TABLE `categories`
  ADD PRIMARY KEY (`CID`),
  ADD UNIQUE KEY `CName` (`CName`);

--
-- Indexes for table `comments`
--
ALTER TABLE `comments`
  ADD PRIMARY KEY (`ID`),
  ADD KEY `AID` (`AID`);

--
-- Indexes for table `images`
--
ALTER TABLE `images`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `sessions`
--
ALTER TABLE `sessions`
  ADD PRIMARY KEY (`session_id`);

--
-- Indexes for table `user`
--
ALTER TABLE `user`
  ADD PRIMARY KEY (`UID`),
  ADD UNIQUE KEY `name` (`name`);

--
-- 在导出的表使用AUTO_INCREMENT
--

--
-- 使用表AUTO_INCREMENT `articles`
--
ALTER TABLE `articles`
  MODIFY `AID` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '文章ID', AUTO_INCREMENT=86;
--
-- 使用表AUTO_INCREMENT `categories`
--
ALTER TABLE `categories`
  MODIFY `CID` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '类别编码', AUTO_INCREMENT=4;
--
-- 使用表AUTO_INCREMENT `comments`
--
ALTER TABLE `comments`
  MODIFY `ID` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '评论';
--
-- 使用表AUTO_INCREMENT `images`
--
ALTER TABLE `images`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT;
--
-- 使用表AUTO_INCREMENT `user`
--
ALTER TABLE `user`
  MODIFY `UID` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '用户编码', AUTO_INCREMENT=5;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
